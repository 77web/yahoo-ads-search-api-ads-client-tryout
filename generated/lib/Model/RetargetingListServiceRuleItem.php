<?php
/**
 * RetargetingListServiceRuleItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  YahooAdsSearchApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス β版 / Yahoo! Ads Search Ads API Reference β Version
 *
 * <ja>Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </ja><br> <br> <en>Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </en>
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace YahooAdsSearchApi\Client\Model;

use \ArrayAccess;
use \YahooAdsSearchApi\Client\ObjectSerializer;

/**
 * RetargetingListServiceRuleItem Class Doc Comment
 *
 * @category Class
 * @description &lt;ja&gt;RetargetingListServiceRuleItemは、ルールの評価条件を保持するオブジェクトです。&lt;/ja&gt;&lt;br&gt;&lt;en&gt;RetargetingListServiceRuleItem is an object that holds evaluation condition of rule.&lt;/en&gt;&lt;hr&gt;&lt;details&gt;&lt;summary&gt;Requirement&lt;/summary&gt;&lt;table border&#x3D;&#39;1&#39;&gt;&lt;tr&gt;&lt;th&gt;PROPERTY&lt;/th&gt;&lt;th&gt;GET&lt;/th&gt;&lt;th&gt;ADD&lt;/th&gt;&lt;th&gt;SET&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ruleType&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Requirement&lt;/td&gt;&lt;td&gt;Requirement&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;value&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Requirement&lt;/td&gt;&lt;td&gt;Requirement&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ruleOperator&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Requirement&lt;/td&gt;&lt;td&gt;Requirement&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;customKeyRuleItem&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Optional&lt;br&gt;&lt;ja&gt;※ruleTypeがCUSTOM_KEY_RULEの場合、Requirement&lt;/ja&gt;&lt;br&gt;&lt;en&gt;∗ If ruleType is CUSTOM_KEY_RULE, Requirement&lt;/en&gt;&lt;/td&gt;&lt;td&gt;Optional&lt;br&gt;&lt;ja&gt;※ruleTypeがCUSTOM_KEY_RULEの場合、Requirement&lt;/ja&gt;&lt;br&gt;&lt;en&gt;∗ If ruleType is CUSTOM_KEY_RULE, Requirement&lt;/en&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;urlRuleItem&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Optional&lt;br&gt;&lt;ja&gt;※ruleTypeがURL_RULEの場合、Requirement&lt;/ja&gt;&lt;br&gt;&lt;en&gt;∗ If ruleType is URL_RULE, Requirement&lt;/en&gt;&lt;/td&gt;&lt;td&gt;Optional&lt;br&gt;&lt;ja&gt;※ruleTypeがURL_RULEの場合、Requirement&lt;/ja&gt;&lt;br&gt;&lt;en&gt;∗ If ruleType is URL_RULE, Requirement&lt;/en&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/details&gt;
 * @package  YahooAdsSearchApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RetargetingListServiceRuleItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'RetargetingListServiceRuleItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'custom_key_rule_item' => '\YahooAdsSearchApi\Client\Model\RetargetingListServiceCustomKeyRuleItem',
        'rule_operator' => '\YahooAdsSearchApi\Client\Model\RetargetingListServiceRuleOperator',
        'rule_type' => '\YahooAdsSearchApi\Client\Model\RetargetingListServiceRuleType',
        'url_rule_item' => '\YahooAdsSearchApi\Client\Model\RetargetingListServiceUrlRuleItem',
        'value' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'custom_key_rule_item' => null,
        'rule_operator' => null,
        'rule_type' => null,
        'url_rule_item' => null,
        'value' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'custom_key_rule_item' => 'customKeyRuleItem',
        'rule_operator' => 'ruleOperator',
        'rule_type' => 'ruleType',
        'url_rule_item' => 'urlRuleItem',
        'value' => 'value'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'custom_key_rule_item' => 'setCustomKeyRuleItem',
        'rule_operator' => 'setRuleOperator',
        'rule_type' => 'setRuleType',
        'url_rule_item' => 'setUrlRuleItem',
        'value' => 'setValue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'custom_key_rule_item' => 'getCustomKeyRuleItem',
        'rule_operator' => 'getRuleOperator',
        'rule_type' => 'getRuleType',
        'url_rule_item' => 'getUrlRuleItem',
        'value' => 'getValue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['custom_key_rule_item'] = isset($data['custom_key_rule_item']) ? $data['custom_key_rule_item'] : null;
        $this->container['rule_operator'] = isset($data['rule_operator']) ? $data['rule_operator'] : null;
        $this->container['rule_type'] = isset($data['rule_type']) ? $data['rule_type'] : null;
        $this->container['url_rule_item'] = isset($data['url_rule_item']) ? $data['url_rule_item'] : null;
        $this->container['value'] = isset($data['value']) ? $data['value'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets custom_key_rule_item
     *
     * @return \YahooAdsSearchApi\Client\Model\RetargetingListServiceCustomKeyRuleItem|null
     */
    public function getCustomKeyRuleItem()
    {
        return $this->container['custom_key_rule_item'];
    }

    /**
     * Sets custom_key_rule_item
     *
     * @param \YahooAdsSearchApi\Client\Model\RetargetingListServiceCustomKeyRuleItem|null $custom_key_rule_item custom_key_rule_item
     *
     * @return $this
     */
    public function setCustomKeyRuleItem($custom_key_rule_item)
    {
        $this->container['custom_key_rule_item'] = $custom_key_rule_item;

        return $this;
    }

    /**
     * Gets rule_operator
     *
     * @return \YahooAdsSearchApi\Client\Model\RetargetingListServiceRuleOperator|null
     */
    public function getRuleOperator()
    {
        return $this->container['rule_operator'];
    }

    /**
     * Sets rule_operator
     *
     * @param \YahooAdsSearchApi\Client\Model\RetargetingListServiceRuleOperator|null $rule_operator rule_operator
     *
     * @return $this
     */
    public function setRuleOperator($rule_operator)
    {
        $this->container['rule_operator'] = $rule_operator;

        return $this;
    }

    /**
     * Gets rule_type
     *
     * @return \YahooAdsSearchApi\Client\Model\RetargetingListServiceRuleType|null
     */
    public function getRuleType()
    {
        return $this->container['rule_type'];
    }

    /**
     * Sets rule_type
     *
     * @param \YahooAdsSearchApi\Client\Model\RetargetingListServiceRuleType|null $rule_type rule_type
     *
     * @return $this
     */
    public function setRuleType($rule_type)
    {
        $this->container['rule_type'] = $rule_type;

        return $this;
    }

    /**
     * Gets url_rule_item
     *
     * @return \YahooAdsSearchApi\Client\Model\RetargetingListServiceUrlRuleItem|null
     */
    public function getUrlRuleItem()
    {
        return $this->container['url_rule_item'];
    }

    /**
     * Sets url_rule_item
     *
     * @param \YahooAdsSearchApi\Client\Model\RetargetingListServiceUrlRuleItem|null $url_rule_item url_rule_item
     *
     * @return $this
     */
    public function setUrlRuleItem($url_rule_item)
    {
        $this->container['url_rule_item'] = $url_rule_item;

        return $this;
    }

    /**
     * Gets value
     *
     * @return string|null
     */
    public function getValue()
    {
        return $this->container['value'];
    }

    /**
     * Sets value
     *
     * @param string|null $value <ja>評価値です。<br>※括弧（()）、シングルクォート（&#39;）、ダブルクォート（&#34;）、タブ（ ）は利用できません。<br>※250文字まで指定可能です。</ja><br><en>Evaluation value.<br>*Cannot use: bracket, single quote, double quote, and tab.<br>*Can select up to 250 characters.</en>
     *
     * @return $this
     */
    public function setValue($value)
    {
        $this->container['value'] = $value;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}



<?php
/**
 * PageFeedItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  YahooAdsSearchApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス β版 / Yahoo! Ads Search Ads API Reference β Version
 *
 * <ja>Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </ja><br> <br> <en>Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </en>
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace YahooAdsSearchApi\Client\Model;

use \ArrayAccess;
use \YahooAdsSearchApi\Client\ObjectSerializer;

/**
 * PageFeedItem Class Doc Comment
 *
 * @category Class
 * @description &lt;ja&gt;PageFeedItemオブジェクトは、ページフィードアイテム情報を格納します。&lt;/ja&gt;&lt;br&gt;&lt;en&gt;PageFeedItem object retains page feed Item.&lt;/en&gt;
 * @package  YahooAdsSearchApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PageFeedItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PageFeedItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_id' => 'int',
        'approval_status' => '\YahooAdsSearchApi\Client\Model\PageFeedItemServiceApprovalStatus',
        'disapproval_reason_codes' => 'string[]',
        'disapproval_reason_comment' => 'string',
        'feed_id' => 'int',
        'page_feed_custom_label' => 'string',
        'page_feed_item_id' => 'int',
        'page_feed_url' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'account_id' => 'int64',
        'approval_status' => null,
        'disapproval_reason_codes' => null,
        'disapproval_reason_comment' => null,
        'feed_id' => 'int64',
        'page_feed_custom_label' => null,
        'page_feed_item_id' => 'int64',
        'page_feed_url' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'approval_status' => 'approvalStatus',
        'disapproval_reason_codes' => 'disapprovalReasonCodes',
        'disapproval_reason_comment' => 'disapprovalReasonComment',
        'feed_id' => 'feedId',
        'page_feed_custom_label' => 'pageFeedCustomLabel',
        'page_feed_item_id' => 'pageFeedItemId',
        'page_feed_url' => 'pageFeedUrl'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'approval_status' => 'setApprovalStatus',
        'disapproval_reason_codes' => 'setDisapprovalReasonCodes',
        'disapproval_reason_comment' => 'setDisapprovalReasonComment',
        'feed_id' => 'setFeedId',
        'page_feed_custom_label' => 'setPageFeedCustomLabel',
        'page_feed_item_id' => 'setPageFeedItemId',
        'page_feed_url' => 'setPageFeedUrl'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'approval_status' => 'getApprovalStatus',
        'disapproval_reason_codes' => 'getDisapprovalReasonCodes',
        'disapproval_reason_comment' => 'getDisapprovalReasonComment',
        'feed_id' => 'getFeedId',
        'page_feed_custom_label' => 'getPageFeedCustomLabel',
        'page_feed_item_id' => 'getPageFeedItemId',
        'page_feed_url' => 'getPageFeedUrl'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['approval_status'] = isset($data['approval_status']) ? $data['approval_status'] : null;
        $this->container['disapproval_reason_codes'] = isset($data['disapproval_reason_codes']) ? $data['disapproval_reason_codes'] : null;
        $this->container['disapproval_reason_comment'] = isset($data['disapproval_reason_comment']) ? $data['disapproval_reason_comment'] : null;
        $this->container['feed_id'] = isset($data['feed_id']) ? $data['feed_id'] : null;
        $this->container['page_feed_custom_label'] = isset($data['page_feed_custom_label']) ? $data['page_feed_custom_label'] : null;
        $this->container['page_feed_item_id'] = isset($data['page_feed_item_id']) ? $data['page_feed_item_id'] : null;
        $this->container['page_feed_url'] = isset($data['page_feed_url']) ? $data['page_feed_url'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id <ja>アカウントID</ja><br><en>Account ID</en>
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets approval_status
     *
     * @return \YahooAdsSearchApi\Client\Model\PageFeedItemServiceApprovalStatus|null
     */
    public function getApprovalStatus()
    {
        return $this->container['approval_status'];
    }

    /**
     * Sets approval_status
     *
     * @param \YahooAdsSearchApi\Client\Model\PageFeedItemServiceApprovalStatus|null $approval_status approval_status
     *
     * @return $this
     */
    public function setApprovalStatus($approval_status)
    {
        $this->container['approval_status'] = $approval_status;

        return $this;
    }

    /**
     * Gets disapproval_reason_codes
     *
     * @return string[]|null
     */
    public function getDisapprovalReasonCodes()
    {
        return $this->container['disapproval_reason_codes'];
    }

    /**
     * Sets disapproval_reason_codes
     *
     * @param string[]|null $disapproval_reason_codes <ja>審査否認理由コード</ja><br><en>Codes of disapproval reason</en>
     *
     * @return $this
     */
    public function setDisapprovalReasonCodes($disapproval_reason_codes)
    {
        $this->container['disapproval_reason_codes'] = $disapproval_reason_codes;

        return $this;
    }

    /**
     * Gets disapproval_reason_comment
     *
     * @return string|null
     */
    public function getDisapprovalReasonComment()
    {
        return $this->container['disapproval_reason_comment'];
    }

    /**
     * Sets disapproval_reason_comment
     *
     * @param string|null $disapproval_reason_comment <ja>審査否認理由のコメント</ja><br><en>Comment of disapproval reason</en>
     *
     * @return $this
     */
    public function setDisapprovalReasonComment($disapproval_reason_comment)
    {
        $this->container['disapproval_reason_comment'] = $disapproval_reason_comment;

        return $this;
    }

    /**
     * Gets feed_id
     *
     * @return int|null
     */
    public function getFeedId()
    {
        return $this->container['feed_id'];
    }

    /**
     * Sets feed_id
     *
     * @param int|null $feed_id <ja>フィードID</ja><br><en>Feed ID</en>
     *
     * @return $this
     */
    public function setFeedId($feed_id)
    {
        $this->container['feed_id'] = $feed_id;

        return $this;
    }

    /**
     * Gets page_feed_custom_label
     *
     * @return string|null
     */
    public function getPageFeedCustomLabel()
    {
        return $this->container['page_feed_custom_label'];
    }

    /**
     * Sets page_feed_custom_label
     *
     * @param string|null $page_feed_custom_label <ja>ページフィードアイテムのカスタムラベル<br>複数ある場合はカンマ区切り</ja><br><en>Custom label of Page feed item.<br>If multiple, comma separated.</en>
     *
     * @return $this
     */
    public function setPageFeedCustomLabel($page_feed_custom_label)
    {
        $this->container['page_feed_custom_label'] = $page_feed_custom_label;

        return $this;
    }

    /**
     * Gets page_feed_item_id
     *
     * @return int|null
     */
    public function getPageFeedItemId()
    {
        return $this->container['page_feed_item_id'];
    }

    /**
     * Sets page_feed_item_id
     *
     * @param int|null $page_feed_item_id <ja>ページフィードアイテムID</ja><br><en>Page feed item ID</en>
     *
     * @return $this
     */
    public function setPageFeedItemId($page_feed_item_id)
    {
        $this->container['page_feed_item_id'] = $page_feed_item_id;

        return $this;
    }

    /**
     * Gets page_feed_url
     *
     * @return string|null
     */
    public function getPageFeedUrl()
    {
        return $this->container['page_feed_url'];
    }

    /**
     * Sets page_feed_url
     *
     * @param string|null $page_feed_url <ja>ページフィードURL。</ja><br><en>Url of page feed</en>
     *
     * @return $this
     */
    public function setPageFeedUrl($page_feed_url)
    {
        $this->container['page_feed_url'] = $page_feed_url;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}



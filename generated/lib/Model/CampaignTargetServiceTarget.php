<?php
/**
 * CampaignTargetServiceTarget
 *
 * PHP version 5
 *
 * @category Class
 * @package  YahooAdsSearchApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス β版 / Yahoo! Ads Search Ads API Reference β Version
 *
 * <ja>Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </ja><br> <br> <en>Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </en>
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace YahooAdsSearchApi\Client\Model;

use \ArrayAccess;
use \YahooAdsSearchApi\Client\ObjectSerializer;

/**
 * CampaignTargetServiceTarget Class Doc Comment
 *
 * @category Class
 * @description &lt;ja&gt;CampaignTargetServiceTargetオブジェクトは、ターゲティング設定を表します。&lt;/ja&gt;&lt;br&gt;&lt;en&gt;CampaignTargetServiceTarget object describes CampaignTargetServiceTarget information.&lt;/en&gt;&lt;hr&gt;&lt;details&gt;&lt;summary&gt;Requirement&lt;/summary&gt;&lt;table border&#x3D;&#39;1&#39;&gt;&lt;tr&gt;&lt;th&gt;PROPERTY&lt;/th&gt;&lt;th&gt;GET&lt;/th&gt;&lt;th&gt;ADD&lt;/th&gt;&lt;th&gt;SET&lt;/th&gt;&lt;th&gt;REMOVE&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;targetId&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Requirement&lt;br&gt;&lt;ja&gt;※LocationCampaignTargetServiceTargetの場合のみ。&lt;br&gt;ScheduleCampaignTargetServiceTarget、PlatformCampaignTargetServiceTarget、NetworkCampaignTargetServiceTargetの場合はIgnore&lt;/ja&gt;&lt;br&gt;&lt;en&gt;(for LocationCampaignTargetServiceTarget),&lt;br&gt;Ignore(for ScheduleCampaignTargetServiceTarget, PlatformCampaignTargetServiceTarget, NetworkCampaignTargetServiceTarget)&lt;/en&gt;&lt;/td&gt;&lt;td&gt;Requirement&lt;br&gt;&lt;ja&gt;※PlatformCampaignTargetServiceTargetの場合はIgnore&lt;/ja&gt;&lt;br&gt;&lt;en&gt;* Ignore for PlatformCampaignTargetServiceTarget&lt;/en&gt;&lt;/td&gt;&lt;td&gt;Requirement&lt;br&gt;NotUpdatable&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;targetType&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Requirement&lt;/td&gt;&lt;td&gt;Requirement&lt;br&gt;NotUpdatable&lt;/td&gt;&lt;td&gt;Requirement&lt;br&gt;NotUpdatable&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;locationTarget&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Optional&lt;br&gt;&lt;ja&gt;※targetTypeがLOCATIONの場合:Requirement。&lt;/ja&gt;&lt;br&gt;&lt;en&gt;∗ If targetType is LOCATION, Requirement&lt;/en&gt;&lt;/td&gt;&lt;td&gt;Optional&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;networkTarget&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Optional&lt;br&gt;&lt;ja&gt;※targetTypeがNETWORKの場合:Requirement。&lt;/ja&gt;&lt;br&gt;&lt;en&gt;∗ If targetType is NETWORK, Requirement&lt;/en&gt;&lt;/td&gt;&lt;td&gt;Optional&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;platformTarget&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Optional&lt;br&gt;&lt;ja&gt;※targetTypeがPLATFORMの場合:Requirement。&lt;/ja&gt;&lt;br&gt;&lt;en&gt;∗ If targetType is PLATFORM, Requirement&lt;/en&gt;&lt;/td&gt;&lt;td&gt;Optional&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;scheduleTarget&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;Optional&lt;br&gt;&lt;ja&gt;※targetTypeがSCHEDULEの場合:Requirement。&lt;/ja&gt;&lt;br&gt;&lt;en&gt;∗ If targetType is SCHEDULE, Requirement&lt;/en&gt;&lt;/td&gt;&lt;td&gt;Optional&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/details&gt;
 * @package  YahooAdsSearchApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CampaignTargetServiceTarget implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CampaignTargetServiceTarget';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'location_target' => '\YahooAdsSearchApi\Client\Model\CampaignTargetServiceLocationTarget',
        'network_target' => '\YahooAdsSearchApi\Client\Model\CampaignTargetServiceNetworkTarget',
        'platform_target' => '\YahooAdsSearchApi\Client\Model\CampaignTargetServicePlatformTarget',
        'schedule_target' => '\YahooAdsSearchApi\Client\Model\CampaignTargetServiceScheduleTarget',
        'target_id' => 'string',
        'target_type' => '\YahooAdsSearchApi\Client\Model\CampaignTargetServiceTargetType'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'location_target' => null,
        'network_target' => null,
        'platform_target' => null,
        'schedule_target' => null,
        'target_id' => null,
        'target_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'location_target' => 'locationTarget',
        'network_target' => 'networkTarget',
        'platform_target' => 'platformTarget',
        'schedule_target' => 'scheduleTarget',
        'target_id' => 'targetId',
        'target_type' => 'targetType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'location_target' => 'setLocationTarget',
        'network_target' => 'setNetworkTarget',
        'platform_target' => 'setPlatformTarget',
        'schedule_target' => 'setScheduleTarget',
        'target_id' => 'setTargetId',
        'target_type' => 'setTargetType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'location_target' => 'getLocationTarget',
        'network_target' => 'getNetworkTarget',
        'platform_target' => 'getPlatformTarget',
        'schedule_target' => 'getScheduleTarget',
        'target_id' => 'getTargetId',
        'target_type' => 'getTargetType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['location_target'] = isset($data['location_target']) ? $data['location_target'] : null;
        $this->container['network_target'] = isset($data['network_target']) ? $data['network_target'] : null;
        $this->container['platform_target'] = isset($data['platform_target']) ? $data['platform_target'] : null;
        $this->container['schedule_target'] = isset($data['schedule_target']) ? $data['schedule_target'] : null;
        $this->container['target_id'] = isset($data['target_id']) ? $data['target_id'] : null;
        $this->container['target_type'] = isset($data['target_type']) ? $data['target_type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets location_target
     *
     * @return \YahooAdsSearchApi\Client\Model\CampaignTargetServiceLocationTarget|null
     */
    public function getLocationTarget()
    {
        return $this->container['location_target'];
    }

    /**
     * Sets location_target
     *
     * @param \YahooAdsSearchApi\Client\Model\CampaignTargetServiceLocationTarget|null $location_target location_target
     *
     * @return $this
     */
    public function setLocationTarget($location_target)
    {
        $this->container['location_target'] = $location_target;

        return $this;
    }

    /**
     * Gets network_target
     *
     * @return \YahooAdsSearchApi\Client\Model\CampaignTargetServiceNetworkTarget|null
     */
    public function getNetworkTarget()
    {
        return $this->container['network_target'];
    }

    /**
     * Sets network_target
     *
     * @param \YahooAdsSearchApi\Client\Model\CampaignTargetServiceNetworkTarget|null $network_target network_target
     *
     * @return $this
     */
    public function setNetworkTarget($network_target)
    {
        $this->container['network_target'] = $network_target;

        return $this;
    }

    /**
     * Gets platform_target
     *
     * @return \YahooAdsSearchApi\Client\Model\CampaignTargetServicePlatformTarget|null
     */
    public function getPlatformTarget()
    {
        return $this->container['platform_target'];
    }

    /**
     * Sets platform_target
     *
     * @param \YahooAdsSearchApi\Client\Model\CampaignTargetServicePlatformTarget|null $platform_target platform_target
     *
     * @return $this
     */
    public function setPlatformTarget($platform_target)
    {
        $this->container['platform_target'] = $platform_target;

        return $this;
    }

    /**
     * Gets schedule_target
     *
     * @return \YahooAdsSearchApi\Client\Model\CampaignTargetServiceScheduleTarget|null
     */
    public function getScheduleTarget()
    {
        return $this->container['schedule_target'];
    }

    /**
     * Sets schedule_target
     *
     * @param \YahooAdsSearchApi\Client\Model\CampaignTargetServiceScheduleTarget|null $schedule_target schedule_target
     *
     * @return $this
     */
    public function setScheduleTarget($schedule_target)
    {
        $this->container['schedule_target'] = $schedule_target;

        return $this;
    }

    /**
     * Gets target_id
     *
     * @return string|null
     */
    public function getTargetId()
    {
        return $this->container['target_id'];
    }

    /**
     * Sets target_id
     *
     * @param string|null $target_id <ja>ターゲットIDです。</ja><br><en>CampaignTargetServiceTarget ID.</en>
     *
     * @return $this
     */
    public function setTargetId($target_id)
    {
        $this->container['target_id'] = $target_id;

        return $this;
    }

    /**
     * Gets target_type
     *
     * @return \YahooAdsSearchApi\Client\Model\CampaignTargetServiceTargetType|null
     */
    public function getTargetType()
    {
        return $this->container['target_type'];
    }

    /**
     * Sets target_type
     *
     * @param \YahooAdsSearchApi\Client\Model\CampaignTargetServiceTargetType|null $target_type target_type
     *
     * @return $this
     */
    public function setTargetType($target_type)
    {
        $this->container['target_type'] = $target_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


